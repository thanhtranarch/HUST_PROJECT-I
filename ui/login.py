# Form implementation generated from reading ui file 'login.ui'
#
# Created by: PyQt6 UI code generator 6.8.1
#
# WARNING: Any manual changes made to this file will be lost when pyuic6 is
# run again.  Do not edit this file unless you know what you are doing.

import darkdetect
import os
from PyQt6.QtGui import QIcon
from PyQt6.QtCore import Qt
from PyQt6 import QtCore, QtGui, QtWidgets
import MySQLdb as bd

class Ui_login(object):
    # def iconset(self):
    #     if darkdetect.isDark():
    #         icon_path = "icon\app_icon_dark.png"
    #     else:
    #         icon_path = "icon\app_icon_light.png"
    #     return icon_path
    def iconset(self):
        base_dir = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
        icon_dir = os.path.join(base_dir, "icon")
        
        if darkdetect.isDark():
            icon_path = os.path.join(icon_dir, "app_icon_dark.png")
        else:
            icon_path = os.path.join(icon_dir, "app_icon_light.png")
        return icon_path

    def setupUi(self, login):
        login.setObjectName("login")
        #login.setWindowFlags(Qt.WindowType.WindowMinimizeButtonHint | Qt.WindowType.WindowCloseButtonHint)
        # login.setWindowFlags(Qt.WindowType.WindowTitleHint | Qt.WindowType.WindowMinimizeButtonHint | Qt.WindowType.WindowCloseButtonHint)
        login.setWindowFlags(
            QtCore.Qt.WindowType.Window |
            QtCore.Qt.WindowType.CustomizeWindowHint |
            QtCore.Qt.WindowType.WindowCloseButtonHint)
        login.resize(250, 130)
        login.setFixedSize(250, 130)
        login.setWindowIcon(QIcon(self.iconset()))
        self.centralwidget = QtWidgets.QWidget(parent=login)
        self.centralwidget.setObjectName("centralwidget")
        self.login_button = QtWidgets.QPushButton(parent=self.centralwidget)
        self.login_button.setGeometry(QtCore.QRect(90, 80, 75, 23))
        self.login_button.setObjectName("login_button")
        self.login_password = QtWidgets.QLineEdit(parent=self.centralwidget)
        self.login_password.setGeometry(QtCore.QRect(90, 50, 141, 20))
        self.login_password.setObjectName("login_password")
        self.login_user = QtWidgets.QLineEdit(parent=self.centralwidget)
        self.login_user.setGeometry(QtCore.QRect(90, 20, 141, 20))
        self.login_user.setObjectName("login_user")
        self.user_label = QtWidgets.QLabel(parent=self.centralwidget)
        self.user_label.setGeometry(QtCore.QRect(20, 20, 47, 14))
        self.user_label.setObjectName("user_label")
        self.label_2 = QtWidgets.QLabel(parent=self.centralwidget)
        self.label_2.setGeometry(QtCore.QRect(20, 50, 61, 16))
        self.label_2.setObjectName("label_2")
        self.register_2 = QtWidgets.QLabel(parent=self.centralwidget)
        self.register_2.setGeometry(QtCore.QRect(20, 80, 47, 20))
        self.register_2.setObjectName("register_2")
        login.setCentralWidget(self.centralwidget)
        self.statusbar = QtWidgets.QStatusBar(parent=login)
        self.statusbar.setObjectName("statusbar")
        login.setStatusBar(self.statusbar)

        self.retranslateUi(login)
        QtCore.QMetaObject.connectSlotsByName(login)
        login.show()

    def retranslateUi(self, login):
        _translate = QtCore.QCoreApplication.translate
        login.setWindowTitle(_translate("login", "MediManager"))
        self.login_button.setText(_translate("login", "LOG IN"))
        self.login_password.setPlaceholderText(_translate("login", "enter password"))
        self.login_user.setPlaceholderText(_translate("login", "enter username"))
        self.user_label.setText(_translate("login", "user"))
        self.label_2.setText(_translate("login", "password"))
        self.register_2.setText(_translate("login", "<a href='#'>register?</a>"))
        self.register_2.setTextFormat(QtCore.Qt.TextFormat.RichText)
        self.register_2.setTextInteractionFlags(QtCore.Qt.TextInteractionFlag.TextBrowserInteraction)
        self.register_2.setOpenExternalLinks(False)
        self.register_2.setCursor(QtGui.QCursor(QtCore.Qt.CursorShape.PointingHandCursor))
        self.register_2.linkActivated.connect(self.on_register_clicked) 

    def on_register_clicked(self):
        print("Register link clicked!")

if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    login = QtWidgets.QMainWindow()
    ui = Ui_login()
    ui.setupUi(login)
    login.show()
    sys.exit(app.exec())