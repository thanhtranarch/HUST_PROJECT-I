from reportlab.lib.pagesizes import A4
from reportlab.pdfgen import canvas
import datetime

def export_daily_report(self):
    filename = f"Daily_Report_{datetime.date.today()}.pdf"
    try:
        db = self.context.db_manager
        db.execute("SELECT medicine_name, stock_quantity, unit, sale_price FROM medicine")
        results = db.fetchall()

        c = canvas.Canvas(filename, pagesize=A4)
        c.setFont("Helvetica", 14)
        c.drawString(50, 800, f"üìã B√°o C√°o T·ªìn Kho - {datetime.date.today()}")

        y = 760
        c.setFont("Helvetica", 10)
        c.drawString(50, y, "T√™n thu·ªëc")
        c.drawString(200, y, "S·ªë l∆∞·ª£ng")
        c.drawString(300, y, "ƒê∆°n v·ªã")
        c.drawString(400, y, "Gi√° b√°n")

        for row in results:
            y -= 20
            if y < 100:
                c.showPage()
                y = 800
            c.drawString(50, y, str(row[0]))
            c.drawString(200, y, str(row[1]))
            c.drawString(300, y, str(row[2]))
            c.drawString(400, y, str(row[3]))

        c.save()
        QMessageBox.information(self, "Th√†nh c√¥ng", f"ƒê√£ xu·∫•t b√°o c√°o ra {filename}")
    except Exception as e:
        QMessageBox.warning(self, "L·ªói", f"Kh√¥ng th·ªÉ xu·∫•t b√°o c√°o: {e}")
